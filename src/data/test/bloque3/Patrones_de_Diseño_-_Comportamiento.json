{
    "title": "Patrones de Dise\u00f1o - Comportamiento",
    "type": "bloque3",
    "shuffle": true,
    "questions": [
        {
            "question": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena.",
            "options": [
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": true
                },
                {
                    "text": "Memento",
                    "isCorrect": false,
                    "hint": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n."
                },
                {
                    "text": "Template Method",
                    "isCorrect": false,
                    "hint": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura."
                },
                {
                    "text": "Observer",
                    "isCorrect": false,
                    "hint": "Permite definir un mecanismo de suscripci\u00f3n para notificar a varios objetos sobre cualquier evento que le suceda al objeto que est\u00e1n observando."
                }
            ]
        },
        {
            "question": "Convierte una solicitud en un objeto independiente que contiene toda la informaci\u00f3n sobre la solicitud. Esta transformaci\u00f3n te permite parametrizar los m\u00e9todos con diferentes solicitudes, retrasar o poner en cola la ejecuci\u00f3n de una solicitud y soportar operaciones que no se pueden realizar.",
            "options": [
                {
                    "text": "Command",
                    "isCorrect": true
                },
                {
                    "text": "Iterator",
                    "isCorrect": false,
                    "hint": "Permite recorrer elementos de una colecci\u00f3n sin exponer su representaci\u00f3n subyacente (lista, pila, \u00e1rbol, etc.)."
                },
                {
                    "text": "Visitor",
                    "isCorrect": false,
                    "hint": "Permite separar algoritmos de los objetos sobre los que operan."
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                }
            ]
        },
        {
            "question": "Permite recorrer elementos de una colecci\u00f3n sin exponer su representaci\u00f3n subyacente (lista, pila, \u00e1rbol, etc.).",
            "options": [
                {
                    "text": "Iterator",
                    "isCorrect": true
                },
                {
                    "text": "Observer",
                    "isCorrect": false,
                    "hint": "Permite definir un mecanismo de suscripci\u00f3n para notificar a varios objetos sobre cualquier evento que le suceda al objeto que est\u00e1n observando."
                },
                {
                    "text": "Visitor",
                    "isCorrect": false,
                    "hint": "Permite separar algoritmos de los objetos sobre los que operan."
                },
                {
                    "text": "Memento",
                    "isCorrect": false,
                    "hint": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n."
                }
            ]
        },
        {
            "question": "Permite reducir las dependencias ca\u00f3ticas entre objetos. El patr\u00f3n restringe las comunicaciones directas entre los objetos, forz\u00e1ndolos a colaborar \u00fanicamente a trav\u00e9s de un objeto mediador.",
            "options": [
                {
                    "text": "Mediator",
                    "isCorrect": true
                },
                {
                    "text": "Template Method",
                    "isCorrect": false,
                    "hint": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura."
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                },
                {
                    "text": "Memento",
                    "isCorrect": false,
                    "hint": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n."
                }
            ]
        },
        {
            "question": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n.",
            "options": [
                {
                    "text": "Memento",
                    "isCorrect": true
                },
                {
                    "text": "State",
                    "isCorrect": false,
                    "hint": "Permite a un objeto alterar su comportamiento cuando su estado interno cambia. Parece como si el objeto cambiara su clase."
                },
                {
                    "text": "Iterator",
                    "isCorrect": false,
                    "hint": "Permite recorrer elementos de una colecci\u00f3n sin exponer su representaci\u00f3n subyacente (lista, pila, \u00e1rbol, etc.)."
                },
                {
                    "text": "Template Method",
                    "isCorrect": false,
                    "hint": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura."
                }
            ]
        },
        {
            "question": "Permite definir un mecanismo de suscripci\u00f3n para notificar a varios objetos sobre cualquier evento que le suceda al objeto que est\u00e1n observando.",
            "options": [
                {
                    "text": "Observer",
                    "isCorrect": true
                },
                {
                    "text": "Memento",
                    "isCorrect": false,
                    "hint": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n."
                },
                {
                    "text": "Template Method",
                    "isCorrect": false,
                    "hint": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura."
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                }
            ]
        },
        {
            "question": "Permite a un objeto alterar su comportamiento cuando su estado interno cambia. Parece como si el objeto cambiara su clase.",
            "options": [
                {
                    "text": "State",
                    "isCorrect": true
                },
                {
                    "text": "Observer",
                    "isCorrect": false,
                    "hint": "Permite definir un mecanismo de suscripci\u00f3n para notificar a varios objetos sobre cualquier evento que le suceda al objeto que est\u00e1n observando."
                },
                {
                    "text": "Strategy",
                    "isCorrect": false,
                    "hint": "Permite definir una familia de algoritmos, colocar cada uno de ellos en una clase separada y hacer sus objetos intercambiables."
                },
                {
                    "text": "Mediator",
                    "isCorrect": false,
                    "hint": "Permite reducir las dependencias ca\u00f3ticas entre objetos. El patr\u00f3n restringe las comunicaciones directas entre los objetos, forz\u00e1ndolos a colaborar \u00fanicamente a trav\u00e9s de un objeto mediador."
                }
            ]
        },
        {
            "question": "Permite definir una familia de algoritmos, colocar cada uno de ellos en una clase separada y hacer sus objetos intercambiables.",
            "options": [
                {
                    "text": "Strategy",
                    "isCorrect": true
                },
                {
                    "text": "Memento",
                    "isCorrect": false,
                    "hint": "Permite guardar y restaurar el estado previo de un objeto sin revelar los detalles de su implementaci\u00f3n."
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                },
                {
                    "text": "State",
                    "isCorrect": false,
                    "hint": "Permite a un objeto alterar su comportamiento cuando su estado interno cambia. Parece como si el objeto cambiara su clase."
                }
            ]
        },
        {
            "question": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura.",
            "options": [
                {
                    "text": "Template Method",
                    "isCorrect": true
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                },
                {
                    "text": "Iterator",
                    "isCorrect": false,
                    "hint": "Permite recorrer elementos de una colecci\u00f3n sin exponer su representaci\u00f3n subyacente (lista, pila, \u00e1rbol, etc.)."
                },
                {
                    "text": "Visitor",
                    "isCorrect": false,
                    "hint": "Permite separar algoritmos de los objetos sobre los que operan."
                }
            ]
        },
        {
            "question": "Permite separar algoritmos de los objetos sobre los que operan.",
            "options": [
                {
                    "text": "Visitor",
                    "isCorrect": true
                },
                {
                    "text": "Template Method",
                    "isCorrect": false,
                    "hint": "Define el esqueleto de un algoritmo en la superclase pero permite que las subclases sobrescriban pasos del algoritmo sin cambiar su estructura."
                },
                {
                    "text": "Chain of Responsibility",
                    "isCorrect": false,
                    "hint": "Permite pasar solicitudes a lo largo de una cadena de manejadores. Al recibir una solicitud, cada manejador decide si la procesa o si la pasa al siguiente manejador de la cadena."
                },
                {
                    "text": "Iterator",
                    "isCorrect": false,
                    "hint": "Permite recorrer elementos de una colecci\u00f3n sin exponer su representaci\u00f3n subyacente (lista, pila, \u00e1rbol, etc.)."
                }
            ]
        }
    ]
}